---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: kubedrainer
  namespace: kube-system
  labels:
    app: kubedrainer

---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kubedrainer
  labels:
    app: kubedrainer
rules:
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - watch
      - list
      - get
      - update
      - patch
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - watch
      - list
      - get
  - apiGroups:
      - extensions
      - apps
    resources:
      - replicasets
      - daemonsets
      - statefulsets
    verbs:
      - watch
      - list
      - get
  - apiGroups:
      - ""
    resources:
      - pods/eviction
    verbs:
      - create
  - apiGroups:
      - batch
    resources:
      - cronjobs
      - jobs
    verbs:
      - get
      - list
      - watch

---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kubedrainer
  labels:
    app: kubedrainer
roleRef:
  kind: ClusterRole
  name: kubedrainer
  apiGroup: rbac.authorization.k8s.io
subjects:
  - kind: ServiceAccount
    name: kubedrainer
    namespace: kube-system

---
kind: DaemonSet
apiVersion: apps/v1
metadata:
  name: kubedrainer
  namespace: kube-system
  labels:
    app: kubedrainer
spec:
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: kubedrainer
  template:
    metadata:
      labels:
        app: kubedrainer
      annotations:
        iam.amazonaws.com/role: kubedrainer
    spec:
      serviceAccountName: kubedrainer
      containers:
        - name: kubedrainer
          image: quay.io/virtuslab/kubedrainer:v0.0.7
          env:
            - name: KUBEDRAINER_NODE
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          resources:
            requests:
              cpu: 10m
              memory: 20Mi
            limits:
              cpu: 100m
              memory: 200Mi
      tolerations:
        # Mark the pod as a critical add-on for rescheduling
        - key: "CriticalAddonsOnly"
          operator: "Exists"
        - key: "ToBeDeletedByClusterAutoscaler"
          operator: "Exists"
